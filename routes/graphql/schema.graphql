#"""A schema defines the capabilities of a GraphQL server. Much like a database schema, it describes the structure and
#the types your API can return."""
"""This is a custom built-in Scalar type from LightHouse. It handles Carbon dates"""
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post] @hasMany
}

type Post {
    id: ID!
    title: String!
    content: String!
    user: User! @belongsTo
    comments: [Comment] @hasMany
}

type Comment{
    id: ID!
    reply: String!
    post: Post! @belongsTo
}

type Query{
    posts: [Post] @all
    post (id: Int! @eq): Post @find

    users: [User] @all
    user (id: Int! @eq): User @find
}

type Mutation {
    createUser (
        name: String!
        email: String @rules(apply: ["required", "email", "unique:users,email"])
        password: String! @bcrypt
    ): User @create #@create((model: "App\\User")->incase the model name is different

    updateUser(
        id: ID!
        name: String!
        email: String
    ): User @update(model: "App\\User")

    deleteUser(
        id: ID!
    ): User @delete(model: "App\\User")
}

#import user.graphql



